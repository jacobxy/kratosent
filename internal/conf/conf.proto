syntax = "proto3";
package kratos.api;

option go_package = "kratosent/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Register register = 3;
  MidConfig mid_config = 4;
  Middleware middleware = 5;
  Log log = 6;
}

message Middleware {
  Prometheus prometheus = 1;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Register {
  Polaris polaris = 1;
}

message Polaris {
  repeated string addrs = 1;
  string namespace = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  Database database = 1;
  Redis redis = 2;
  Polaris department = 3;
}

message MidConfig {
  repeated string addrs = 1;
  string namespace  = 2;
  string file_group = 3;
  string file_name = 4;
}

message Prometheus {
  message VecConf {
    string namespace = 1;
    string subsystem = 2;
    string name = 3;
  }
  VecConf histogram = 1;
  VecConf counter = 2;
}

message Log {
  string level = 1;
  string file = 2;
  int64 max_size = 3;
  int64 max_backup = 4;
  int64 max_age = 5; 
  bool compress = 6;
}